#!/usr/bin/env ruby
require 'sord'
require 'commander/import'
require 'bundler'

program :name, 'sord'
program :version, Sord::VERSION
program :description, 'Generate Sorbet RBIs from YARD documentation'

default_command :gen
command :gen do |c|
  c.syntax = 'sord gen <output-file> [options]'
  c.description = 'Generates an RBI file from this directory\'s YARD docs'
  c.option '--[no-]comments', 'Controls informational/warning comments in the RBI file'
  c.option '--[no-]regenerate', 'Controls whether YARD is executed before Sord runs'
  c.option '--break-params INTEGER', Integer, 'Break params onto their own lines if there are this many'
  c.option '--replace-errors-with-untyped', 'Uses T.untyped rather than SORD_ERROR_ constants'
  c.option '--exclude-messages STRING', String, 'Blacklists a comma-separated string of log message types'
  c.option '--include-messages STRING', String, 'Whitelists a comma-separated string of log message types'

  c.action do |args, options|
    options.default(
      comments: true,
      regenerate: true,
      break_params: 4,
      replace_errors_with_untyped: false,
      exclude_messages: nil,
      include_messages: nil,
    )

    if args.length != 1
      Sord::Logging.error('Must specify filename')
      exit 1
    end

    if options.include_messages && options.exclude_messages
      Sord::Logging.error('Please specify only one of --include-messages and --exclude-messages.')
      exit 1
    elsif options.include_messages
      whitelist = options.include_messages.split(',').map { |x| x.downcase.to_sym }
      unless Sord::Logging.valid_types?(whitelist)
        Sord::Logging.error('Not all types on your --include-messages list are valid.')
        Sord::Logging.error("Valid options are: #{Sord::Logging::AVAILABLE_TYPES.map(&:to_s).join(', ')}")
        exit 1
      end
      Sord::Logging.enabled_types = whitelist | [:done]
    elsif options.exclude_messages
      blacklist = options.exclude_messages.split(',').map { |x| x.downcase.to_sym }
      unless Sord::Logging.valid_types?(blacklist)
        Sord::Logging.error('Not all types on your --include-messages list are valid.')
        Sord::Logging.error("Valid options are: #{Sord::Logging::AVAILABLE_TYPES.map(&:to_s).join(', ')}")
        exit 1
      end
      Sord::Logging.enabled_types = Sord::Logging::AVAILABLE_TYPES - blacklist
    end

    if options.regenerate
      begin
        Sord::Logging.info('Running YARD...')
        Bundler.with_clean_env do
          system('bundle exec yard')
        end
      rescue Errno::ENOENT
        Sord::Logging.error('The YARD tool could not be found on your PATH.')
        Sord::Logging.error('You may need to run \'gem install yard\'.')
        Sord::Logging.error('If documentation has already been generated, pass --no-regenerate to Sord.')
        exit 1
      end
    end

    Sord::RbiGenerator.new(options).run(args.first)
  end
end
